<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>1. Mượn tài liệu của thư viện: 
  1.1 Bạn đọc phải trình Thẻ sinh viên và tài liệu mượn cho thủ thư để đăng ký vào hệ thống mượn - trả mỗi khi muốn mượn tài liệu để đọc tại chỗ hoặc mang về nhà. Thư viện ưu tiên và khuyến khích mượn tài liệu đọc tại chỗ.
  1.2 Sách và những tài liệu khác hiện có trong Thư viện được đưa ra phục vụ theo quy định của Thư viện.
  1.3 Thời điểm được mượn tài liệu về nhà sẽ do Thư viện quy định theo từng thời kỳ nhất định và được thông báo tại Thư viện và trên website của trường.
  1.4 Không được mượn bất kỳ tài liệu nào trong 30 phút trước giờ đóng cửa. Vào những thời điểm có phục vụ buổi tối, Thư viện chỉ mở cửa kho đến 19h00.
  1.5 Số lượng tài liệu (gọi chung cho tên sách, báo hoặc vật mang tin khác) và thời hạn mượn tài liệu về nhà được quy định theo từng loại hình bạn đọc như sau:
      • Giảng viên: được mượn tối đa 05 (năm) tài liệu trong thời hạn 04 tuần và được phép gia hạn thêm 02 tuần.
      • Cán bộ, nhân viên được mượn tối đa 04 (bốn) tài liệu trong thời hạn 03 tuần và được phép gia hạn thêm 02 tuần.
      • Sinh viên: được mượn tối đa 04 (bốn) tài liệu trong thời hạn 02 tuần (02 tài liệu mượn về nhà và 02 đọc tại chỗ) và được phép gia hạn thêm 01 tuần.
  1.6 Chỉ được phép gia hạn đối với những tài liệu không được bạn đọc khác yêu cầu hoặc số lượng còn lại trong Thư viện nằm trong hạn định cho phép mượn về nhà.
2. Trả tài liệu cho Thư viện:
  2.1 Ngày trả các tài liệu mượn về do Thư viện quy định và được thông báo ngay tại quầy Thủ Thư ngay sau khi đăng ký mượn.
  2.2 Bạn đọc có trách nhiệm trả lại các tài liệu đã mượn về nhà cho Thư viện theo thời hạn quy định được ghi ở Mục 5.5.
  2.3 Bất kỳ tài liệu nào đều có thể được yêu cầu thu về trước kỳ hạn nếu có yêu cầu theo kế hoạch đột xuất của Thư viện. Trong thời hạn bảy ngày sau khi nhận được yêu cầu thu hồi tài liệu, bạn đọc phải mang trả lại tài liệu đó cho Thư viện.
  2.4 Phải trả lại toàn bộ tài liệu đã mượn theo quy định và phải giải quyết tất cả các khoản nợ Thư viện (nếu có), Thư viện sẽ không ký xác nhận ra trường đối với các bạn đọc chưa hoàn trả đầy đủ tài liệu cho Thư viện.
  2.5 Vào cuối mỗi  năm học theo quy định, những khoản nợ đối với Thư viện phải được giải quyết xong. Sinh viên vi phạm sẽ không được nhận kết quả đăng ký môn học của học kỳ kế tiếp.</value>
  </data>
</root>